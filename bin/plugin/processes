#!/bin/sh
# -*- sh -*-

set -e

: << =cut

=head1 NAME

processes - Plugin to monitor processes and process states.

=head1 ABOUT

This plugin requires munin-server version 1.2.5 or 1.3.3 (or higher).

This plugin is backwards compatible with the old processes-plugins found on
SunOS, Linux and *BSD (i.e. the history is preserved).

All fields have colours associated with them which reflect the type of process
(sleeping/idle = blue, running = green, stopped/zombie/dead = red, etc.)

=head1 CONFIGURATION

No configuration for this plugin.

=head1 AUTHOR

Copyright (C) 2006 Lars Strand

=head1 LICENSE

GNU General Public License, version 2

=begin comment

This file is part of Munin.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; version 2 dated June, 1991.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
Street, Fifth Floor, Boston, MA 02110-1301 USA.

=end comment

=head1 MAGIC MARKERS

=begin comment

These magic markers are used by munin-node-configure when installing
munin-node.

=end comment

 #%# family=auto
 #%# capabilities=autoconf

=cut

# Search for program in $PATH unless predefined.
awk=${awk:-awk}
ps=${ps:-ps}

# Find operating system
OPERSYS=${OPERSYS:-$(uname | cut -f 1 -d _)}
[ -z "$OPERSYS" ] && echo >&2 "Failed to detect environment via uname" && exit 1
N=$( date +'%s' )
H=$( hostname )
T="GAUGE"

if [ "$OPERSYS" = "Linux" ]; then
    # shellcheck disable=SC2016
    "$ps" --no-header -eo s | "$awk" "
{ processes++; stat[\$1]++ }
END {
print \"$N:$H:ps.processes:\"        0+processes \":$T\";
print \"$N:$H:ps.uninterruptible:\"  0+stat[\"D\"] \":$T\";
print \"$N:$H:ps.runnable:\"         0+stat[\"R\"] \":$T\";
print \"$N:$H:ps.sleeping:\"         0+stat[\"S\"] \":$T\";
print \"$N:$H:ps.idle:\"             0+stat[\"I\"] \":$T\";
print \"$N:$H:ps.stopped:\"          0+stat[\"T\"] \":$T\";
print \"$N:$H:ps.paging:\"           0+stat[\"W\"] \":$T\";
print \"$N:$H:ps.dead:\"             0+stat[\"X\"] \":$T\";
print \"$N:$H:ps.zombie:\"           0+stat[\"Z\"] \":$T\";
}"

elif [ "$OPERSYS" = "SunOS" ]; then
    # shellcheck disable=SC2016
    "$ps" -e -o s | "$awk" '
{ total++; stat[$1]++ }
END {
print "total.value "    0+total;
print "running.value "  0+stat["O"];
print "sleeping.value " 0+stat["S"];
print "runnable.value " 0+stat["R"];
print "stopped.value "  0+stat["T"];
print "zombie.value "   0+stat["Z"];
}'
elif [ "$OPERSYS" = "FreeBSD" ]; then
    # shellcheck disable=SC2016
    "$ps" -axo state= | sed -e 's/^\(.\).*/\1/' | "$awk" "
{ processes++; stat[\$1]++ }
END {
print \"$N:$H:ps.processes:\"        0+processes \":$T\";
print \"$N:$H:ps.uninterruptible:\"  0+stat[\"D\"] \":$T\";
print \"$N:$H:ps.idle:\"             0+stat[\"I\"] \":$T\";
print \"$N:$H:ps.lock:\"             0+stat[\"G\"] \":$T\";
print \"$N:$H:ps.runnable:\"         0+stat[\"R\"] \":$T\";
print \"$N:$H:ps.sleeping:\"         0+stat[\"S\"] \":$T\";
print \"$N:$H:ps.stopped:\"          0+stat[\"T\"] \":$T\";
print \"$N:$H:ps.interrupt:\"        0+stat[\"W\"] \":$T\";
print \"$N:$H:ps.zombie:\"           0+stat[\"Z\"] \":$T\";
}"
elif [ "$OPERSYS" = "OpenBSD" ]; then
    # First line is header. Remove it.
    # shellcheck disable=SC2016
    "$ps" -axo state= | sed '1d' | sed -e 's/^\(.\).*/\1/' | "$awk" '
{ processes++; stat[$1]++ }
END {
print "processes.value "        0+processes;
print "uninterruptible.value "  0+stat["D"];
print "idle.value "             0+stat["I"];
print "runnable.value "         0+stat["R"];
print "sleeping.value "         0+stat["S"];
print "stopped.value "          0+stat["T"];
print "zombie.value "           0+stat["Z"];
}'
elif [ "$OPERSYS" = "NetBSD" ]; then
    # First line is header. Remove it.
    # shellcheck disable=SC2016
    "$ps" -axo state= | sed '1d' | sed -e 's/^\(.\).*/\1/' | "$awk" '
{ processes++; stat[$1]++ }
END {
print "processes.value "        0+processes;
print "uninterruptible.value "  0+stat["D"];
print "idle.value "             0+stat["I"];
print "suspended.value "        0+stat["U"];
print "runnable.value "         0+stat["R"];
print "sleeping.value "         0+stat["S"];
print "stopped.value "          0+stat["T"];
print "zombie.value "           0+stat["Z"];
}'

elif [ "$OPERSYS" = "Darwin" ]; then
    # First line is header. Remove it.
    # shellcheck disable=SC2016
    "$ps" -axo state= | sed '1d' | sed -e 's/^\(.\).*/\1/' | "$awk" '
{ processes++; stat[$1]++ }
END {
print "processes.value "        0+processes;
print "uninterruptible.value "  0+stat["U"];
print "idle.value "             0+stat["I"];
print "runnable.value "         0+stat["R"];
print "sleeping.value "         0+stat["S"];
print "stopped.value "          0+stat["T"];
print "zombie.value "           0+stat["Z"];
}'

elif [ "$OPERSYS" = "CYGWIN" ]; then
    # First line is header. Remove it. Also remove WINPID duplicates.
    # shellcheck disable=SC2016
    "$ps" -aW | sed '1d' | cut -c 30-36 | sort -u | "$awk" '
{ processes++; }
END {
print "processes.value "        0+processes;
}'

elif [ "$OPERSYS" = "HP-UX" ]; then
    # First line is header. Remove it.
    # shellcheck disable=SC2016
    "$ps" -el | sed '1d' | "$awk" '{print $2}' | "$awk" '
{ processes++; stat[$1]++ }
END {
print "processes.value "        0+processes;
print "nonexistent.value "      0+stat["0"];
print "sleeping.value "         0+stat["S"];
print "waiting.value "          0+stat["W"];
print "runnable.value "         0+stat["R"];
print "intermediate.value "     0+stat["I"];
print "terminated.value "       0+stat["Z"];
print "stopped.value "          0+stat["T"];
print "growing.value "          0+stat["X"];
}'

fi
